ROBOBUG WALKTHROUGH/USER GUIDE

DEFAULT CONTROLS
Up - Climb up
Left/Right - Move
Down & Space - drop down
1 - Bug Catching Star (Bugcatcher)
2 - Commenting Star (Commenter)
3 - Breakpoint Setting & Continuing Star (Breakpointer)
4 - Print Statement Star (Printer)
5 - Function Warping Star (Warper)
6 - Testing Star (Tester)
Left Control - Throw Star

Walkthrough:
Press Space to Start!

Level 1:
Robot miscalculates average force because of the line "avgf++;", where the average is incremented for no reason. Press 1 to select the bugcatcher, then press control to throw the ninja star at the avgf++ line. A bug will appear; run to it to proceed to level 2.

Level 2:
First, press 5 to select the Warper tool. Go to the "getWeights()" line and throw the warper tool (5) at the blue text. This will take you to a new scroll. Stand on the black line and type a negative number. Then, fall to the bottom of the scroll and throw the warp tool to return. Then, warp to the getTotalWeight function and enter any value. Return, and go to the 'return weightcalc(weights[]) == totalweight' line, and throw the tester tool (6). This is how to find the first bug. The second bug is simply found by running the Energy Calc test without entering any values into getPartPowers or getMedianPower; just run the test and you find the second bug. To find the final bug, enter a floating point number as one of the values in the averagetemperature values. Once you enter another value into the output you can find the last bug and proceed to level 3.

Level 3:
The bugs here are all in the minimum/maximum functions at the bottom of the code. Use the warp tool to warp to the next scroll, then throw bugcatchers at the following lines:
#include <swapvalues.h>
case 4 (of minimum)
case 4 (of maximum)

Level 4:
The bug is in the blue tab: the color "powder blue" has an invalid value for green (264 > 255). Throw a bugcatcher here.

Level 5:
The bug is that the x component of objects is not used; fall to the bottom of the code and throw a bugcatcher at the //x component line.

Level 6:
1) The getFailRequirements function is bugged. Throw your bugcatcher at that line.
2) Warp to #include <diagnostic.h>. The IO/Communications line is commented out. Throw a commenter tool (2) here, then go to the bottom of the scroll and warp back.
3-4) Select the breakpointer (3) tool, and fall to the 'similar = compare(part1, part2, similar); line. Throw the breakpointer left to activate the breakpoint. Then, throw a couple breakpoint stars to the right until the part2num value is 12 (or 6). Finally, throw a bugcatcher to the left.
5) Finally, fall to the 'if (color2.index%6...' line and throw a bugcatcher left.